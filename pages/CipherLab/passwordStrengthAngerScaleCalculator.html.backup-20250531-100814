<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Security Analyzer | CipherLab - Docket One</title>
    <meta name="description" content="Professional password strength analyzer with security recommendations and detailed feedback.">
    
    <link rel="stylesheet" href="../../common/navbar-enhanced.css">
    <link rel="stylesheet" href="../../common/santa-improvements.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    
    <style>
        :root {
            --primary: #7c3aed;
            --primary-light: #8b5cf6;
            --secondary: #06b6d4;
            --success: #10b981;
            --warning: #f59e0b;
            --error: #ef4444;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-600: #4b5563;
            --gray-800: #1f2937;
            --gray-900: #111827;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background: var(--gray-50);
            color: var(--gray-800);
            line-height: 1.6;
        }
        
        .hero {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-light) 50%, var(--secondary) 100%);
            color: white;
            padding: 4rem 2rem;
            text-align: center;
        }
        
        .hero-title {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
        }
        
        .hero-subtitle {
            font-size: 1.125rem;
            opacity: 0.9;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 3rem 2rem;
        }
        
        .analyzer-panel {
            background: white;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--gray-200);
        }
        
        .password-input {
            width: 100%;
            padding: 1rem;
            border: 2px solid var(--gray-200);
            border-radius: 12px;
            font-size: 1rem;
            transition: border-color 0.3s;
            margin-bottom: 2rem;
        }
        
        .password-input:focus {
            outline: none;
            border-color: var(--primary);
        }
        
        .security-shield {
            text-align: center;
            margin: 2rem 0;
        }
        
        .shield-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
        }
        
        .security-level {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        
        .strength-meter {
            background: var(--gray-200);
            border-radius: 8px;
            height: 8px;
            margin: 1rem 0;
            overflow: hidden;
        }
        
        .strength-fill {
            height: 100%;
            border-radius: 8px;
            transition: width 0.8s ease;
        }
        
        .criteria-list {
            display: grid;
            gap: 0.5rem;
            margin: 2rem 0;
        }
        
        .criterion {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem;
            background: var(--gray-50);
            border-radius: 8px;
        }
        
        .criterion.met {
            background: rgba(16, 185, 129, 0.1);
            color: var(--success);
        }
        
        .criterion.unmet {
            background: rgba(239, 68, 68, 0.1);
            color: var(--error);
        }
        
        @media (max-width: 768px) {
            .hero {
                padding: 2rem 1rem;
            }
            
            .hero-title {
                font-size: 2rem;
            }
            
            .container {
                padding: 2rem 1rem;
            }
        }
    </style>
</head>
<body>
    <nav class="main-nav">
        <div class="nav-container">
            <div class="nav-logo">
                <a href="../../index.html">🧮 Docket One</a>
            </div>
            <ul class="nav-links">
                <li><a href="../BigKidMath/index.html">Big Kid Math</a></li>
                <li><a href="../CipherLab/index.html">Cipher Lab</a></li>
                <li><a href="../GeekGalaxy/index.html">Geek Galaxy</a></li>
                <li><a href="../LifeHacks/index.html">Life Hacks</a></li>
                <li><a href="../Math_Magik/index.html">Math Magik</a></li>
                <li><a href="../Otaku_Ops/index.html">Otaku Ops</a></li>
            </ul>
        </div>
    </nav>

    <section class="hero">
        <h1 class="hero-title">Password Security Analyzer</h1>
        <p class="hero-subtitle">Professional password strength analysis with security recommendations</p>
    </section>

    <main class="container">
        <div class="analyzer-panel" x-data="passwordAnalyzer()">
            <label for="password">Enter Password to Analyze:</label>
            <input 
                type="password" 
                id="password"
                x-model="password" 
                @input="analyzePassword"
                class="password-input" 
                placeholder="Type your password here...">

            <div x-show="password" class="security-shield">
                <div class="shield-icon" x-text="getShieldIcon()"></div>
                <div class="security-level" :style="`color: ${getSecurityColor()}`" x-text="getSecurityLabel()"></div>
                <div x-text="`Security Score: ${score}/100`"></div>
                
                <div class="strength-meter">
                    <div class="strength-fill" :style="`width: ${score}%; background: ${getSecurityColor()}`"></div>
                </div>
            </div>

            <div x-show="password" class="criteria-list">
                <template x-for="criterion in criteria">
                    <div class="criterion" :class="criterion.met ? 'met' : 'unmet'">
                        <span x-text="criterion.met ? '✅' : '❌'"></span>
                        <span x-text="criterion.description"></span>
                    </div>
                </template>
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.data('passwordAnalyzer', () => ({
                password: '',
                score: 0,
                criteria: [
                    { name: 'length', description: 'At least 12 characters long', met: false },
                    { name: 'lowercase', description: 'Contains lowercase letters', met: false },
                    { name: 'uppercase', description: 'Contains uppercase letters', met: false },
                    { name: 'numbers', description: 'Contains numbers', met: false },
                    { name: 'symbols', description: 'Contains special characters', met: false }
                ],
                
                analyzePassword() {
                    if (!this.password) {
                        this.score = 0;
                        this.criteria.forEach(c => c.met = false);
                        return;
                    }
                    
                    let score = 0;
                    const password = this.password;
                    
                    // Length
                    if (password.length >= 12) {
                        score += 25;
                        this.criteria[0].met = true;
                    } else {
                        this.criteria[0].met = false;
                    }
                    
                    // Lowercase
                    if (/[a-z]/.test(password)) {
                        score += 15;
                        this.criteria[1].met = true;
                    } else {
                        this.criteria[1].met = false;
                    }
                    
                    // Uppercase
                    if (/[A-Z]/.test(password)) {
                        score += 15;
                        this.criteria[2].met = true;
                    } else {
                        this.criteria[2].met = false;
                    }
                    
                    // Numbers
                    if (/[0-9]/.test(password)) {
                        score += 15;
                        this.criteria[3].met = true;
                    } else {
                        this.criteria[3].met = false;
                    }
                    
                    // Symbols
                    if (/[^A-Za-z0-9]/.test(password)) {
                        score += 20;
                        this.criteria[4].met = true;
                    } else {
                        this.criteria[4].met = false;
                    }
                    
                    // Length bonus
                    if (password.length >= 16) score += 10;
                    
                    this.score = Math.min(100, score);
                },
                
                getShieldIcon() {
                    if (this.score < 30) return '🔓';
                    if (this.score < 60) return '🛡️';
                    if (this.score < 80) return '🛡️';
                    return '🛡️';
                },
                
                getSecurityLabel() {
                    if (this.score < 30) return 'Weak Security';
                    if (this.score < 60) return 'Fair Security';
                    if (this.score < 80) return 'Good Security';
                    return 'Strong Security';
                },
                
                getSecurityColor() {
                    if (this.score < 30) return '#ef4444';
                    if (this.score < 60) return '#f59e0b';
                    if (this.score < 80) return '#22c55e';
                    return '#10b981';
                }
            }));
        });
    </script>
</body>
</html>