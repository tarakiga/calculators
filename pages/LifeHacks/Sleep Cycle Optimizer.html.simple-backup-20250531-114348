<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sleep Cycle Optimizer | Life Hacks - Docket One</title>
    <meta name="description" content="Optimize your sleep with scientific precision! Calculate perfect bedtimes and wake-up times using 90-minute sleep cycles. Wake up refreshed every time with our smart sleep calculator.">
    
    <!-- Enhanced Social Media Meta Tags -->
    <meta property="og:title" content="Sleep Cycle Optimizer | Life Hacks | Docket One">
    <meta property="og:description" content="Wake up refreshed every day! Scientific sleep calculator that optimizes your bedtime and wake-up times using natural 90-minute sleep cycles.">
    <meta property="og:image" content="https://docket.one/social-preview.jpg">
    <meta property="og:url" content="https://docket.one/pages/LifeHacks/Sleep-Cycle-Optimizer.html">
    <meta property="og:type" content="website">
    <meta property="og:site_name" content="Docket One Calculators">

    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Sleep Cycle Optimizer">
    <meta name="twitter:description" content="Scientific sleep optimization! Calculate perfect sleep times using 90-minute cycles for better rest and energy.">
    <meta name="twitter:image" content="https://docket.one/social-preview.jpg">
    
    <link rel="stylesheet" href="../../common/navbar-enhanced.css">
    <link rel="stylesheet" href="../../common/santa-improvements.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    
    <style>
        /* Sleep Optimization Design System */
        :root {
            /* Sleep Color Palette */
            --sleep-primary: #4c1d95;
            --sleep-secondary: #7c3aed;
            --sleep-accent: #06b6d4;
            --sleep-deep: #1e1b4b;
            --sleep-light: #f1f5f9;
            --sleep-dream: #8b5cf6;
            
            /* Sleep Stage Colors */
            --light-sleep: #60a5fa;
            --deep-sleep: #3730a3;
            --rem-sleep: #a855f7;
            --awake-color: #fbbf24;
            --recovery-green: #10b981;
            --moonlight: #e0e7ff;
            
            /* Night Mode Colors */
            --night-dark: #0f172a;
            --night-medium: #1e293b;
            --night-light: #334155;
            --starlight: #e2e8f0;
            
            /* Surface Colors */
            --bg-primary: #ffffff;
            --bg-secondary: #f8fafc;
            --bg-tertiary: #f1f5f9;
            --surface-elevated: #ffffff;
            --text-primary: #1f2937;
            --text-secondary: #6b7280;
            --border-color: rgba(76, 29, 149, 0.2);
            
            /* Spacing Scale */
            --space-xs: 0.25rem;
            --space-sm: 0.5rem;
            --space-md: 1rem;
            --space-lg: 1.5rem;
            --space-xl: 2rem;
            --space-2xl: 3rem;
            --space-3xl: 4rem;
            
            /* Shadows */
            --shadow-sm: 0 1px 2px 0 rgba(76, 29, 149, 0.05);
            --shadow-md: 0 4px 6px -1px rgba(76, 29, 149, 0.1);
            --shadow-lg: 0 10px 15px -3px rgba(76, 29, 149, 0.1);
            --shadow-xl: 0 20px 25px -5px rgba(76, 29, 149, 0.1);
            
            /* Border Radius */
            --radius: 0.75rem;
            --radius-sm: 0.5rem;
            --radius-lg: 1rem;
            --radius-xl: 1.5rem;
            
            /* Transitions */
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, var(--night-dark) 0%, var(--sleep-deep) 30%, var(--sleep-primary) 70%, var(--moonlight) 100%);
            color: var(--text-primary);
            line-height: 1.6;
            min-height: 100vh;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(135deg, var(--night-dark) 0%, var(--sleep-deep) 30%, var(--sleep-primary) 70%, var(--sleep-secondary) 100%);
            color: white;
            padding: var(--space-3xl) var(--space-lg);
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><g fill="%23ffffff" opacity="0.08"><circle cx="20" cy="20" r="2"/><circle cx="80" cy="30" r="1.5"/><circle cx="50" cy="50" r="1"/><circle cx="30" cy="80" r="2.5"/><circle cx="70" cy="70" r="1.5"/><circle cx="15" cy="60" r="1"/><circle cx="85" cy="15" r="2"/><circle cx="40" cy="25" r="1.5"/><circle cx="90" cy="85" r="1"/><circle cx="10" cy="90" r="2"/></g></svg>') repeat;
            animation: starfield-drift 30s linear infinite;
            pointer-events: none;
        }

        @keyframes starfield-drift {
            0% { transform: translateX(0) translateY(0); }
            100% { transform: translateX(-50px) translateY(-50px); }
        }

        .hero-badge {
            display: inline-flex;
            align-items: center;
            gap: var(--space-sm);
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(15px);
            color: white;
            padding: var(--space-sm) var(--space-lg);
            border-radius: 2rem;
            font-size: 0.875rem;
            font-weight: 600;
            margin-bottom: var(--space-lg);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .hero-title {
            font-size: clamp(2.5rem, 6vw, 4rem);
            font-weight: 800;
            margin-bottom: var(--space-lg);
            line-height: 1.1;
            text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
            background: linear-gradient(135deg, #ffffff, var(--awake-color));
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .hero-subtitle {
            font-size: 1.25rem;
            opacity: 0.95;
            max-width: 700px;
            margin: 0 auto var(--space-xl);
            line-height: 1.6;
        }

        .difficulty-badge {
            display: inline-flex;
            align-items: center;
            gap: var(--space-xs);
            background: var(--recovery-green);
            color: white;
            padding: var(--space-sm) var(--space-lg);
            border-radius: var(--radius);
            font-weight: 600;
            font-size: 0.875rem;
            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
        }

        /* Main Container */
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 var(--space-lg);
        }

        /* Educational Section */
        .educational-section {
            background: var(--surface-elevated);
            margin: calc(-1 * var(--space-xl)) var(--space-lg) var(--space-2xl);
            border-radius: var(--radius-xl);
            padding: var(--space-2xl);
            box-shadow: var(--shadow-xl);
            border: 1px solid var(--border-color);
            position: relative;
            z-index: 10;
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--sleep-primary);
            margin-bottom: var(--space-lg);
            display: flex;
            align-items: center;
            gap: var(--space-sm);
        }

        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: var(--space-lg);
            margin-bottom: var(--space-xl);
        }

        .info-card {
            background: linear-gradient(135deg, var(--sleep-primary) 0%, var(--sleep-secondary) 100%);
            color: white;
            padding: var(--space-xl);
            border-radius: var(--radius-lg);
            text-align: center;
            transform: translateY(0);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .info-card::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: rotate(45deg);
            transition: var(--transition);
            opacity: 0;
        }

        .info-card:hover::before {
            opacity: 1;
            animation: moonbeam 1.5s ease-in-out;
        }

        @keyframes moonbeam {
            0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
            100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
        }

        .info-card:hover {
            transform: translateY(-6px);
            box-shadow: var(--shadow-xl);
        }

        .info-card-icon {
            font-size: 2.5rem;
            margin-bottom: var(--space-md);
            filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
        }

        .info-card-title {
            font-size: 1.25rem;
            font-weight: 700;
            margin-bottom: var(--space-sm);
        }

        .info-card-text {
            font-size: 0.9rem;
            opacity: 0.9;
            line-height: 1.6;
        }

        /* Sleep Cycle Visualization */
        .cycle-visualization {
            background: linear-gradient(145deg, var(--night-dark), var(--night-medium));
            border-radius: var(--radius-xl);
            padding: var(--space-2xl);
            margin: var(--space-xl) 0;
            color: white;
            position: relative;
            overflow: hidden;
        }

        .cycle-visualization::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at 30% 40%, rgba(168, 85, 247, 0.1) 0%, transparent 50%);
            pointer-events: none;
        }

        .cycle-chart {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: var(--space-md);
            margin: var(--space-lg) 0;
            position: relative;
            z-index: 1;
        }

        .cycle-block {
            background: rgba(255, 255, 255, 0.1);
            border-radius: var(--radius);
            padding: var(--space-md);
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: var(--transition);
            cursor: pointer;
        }

        .cycle-block:hover {
            transform: translateY(-2px);
            background: rgba(255, 255, 255, 0.15);
        }

        .cycle-number {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: var(--space-xs);
        }

        .cycle-stages {
            display: flex;
            height: 40px;
            border-radius: var(--radius-sm);
            overflow: hidden;
            margin: var(--space-sm) 0;
        }

        .stage-light { background: var(--light-sleep); flex: 2; }
        .stage-deep { background: var(--deep-sleep); flex: 1; }
        .stage-rem { background: var(--rem-sleep); flex: 1; }

        .cycle-time {
            font-size: 0.75rem;
            opacity: 0.8;
        }

        /* Sleep Stage Legend */
        .sleep-legend {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: var(--space-md);
            margin-top: var(--space-lg);
            position: relative;
            z-index: 1;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: var(--space-sm);
            font-size: 0.875rem;
        }

        .legend-color {
            width: 16px;
            height: 16px;
            border-radius: 4px;
        }

        /* Calculator Layout */
        .calculator-layout {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: var(--space-2xl);
            margin-bottom: var(--space-3xl);
        }

        .calculator-panel {
            background: var(--surface-elevated);
            border-radius: var(--radius-xl);
            padding: var(--space-2xl);
            box-shadow: var(--shadow-lg);
            border: 1px solid var(--border-color);
            backdrop-filter: blur(10px);
        }

        .panel-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--sleep-primary);
            margin-bottom: var(--space-xl);
            display: flex;
            align-items: center;
            gap: var(--space-sm);
        }

        /* Input Controls */
        .input-group {
            margin-bottom: var(--space-xl);
        }

        .input-label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: var(--space-sm);
        }

        .input-field {
            width: 100%;
            padding: var(--space-lg);
            border: 2px solid var(--border-color);
            border-radius: var(--radius);
            font-size: 1rem;
            transition: var(--transition);
            font-family: inherit;
            background: var(--bg-primary);
        }

        .input-field:focus {
            outline: none;
            border-color: var(--sleep-primary);
            box-shadow: 0 0 0 3px rgba(76, 29, 149, 0.1);
            background: var(--bg-secondary);
        }

        /* Mode Toggle */
        .mode-toggle {
            display: flex;
            background: var(--bg-secondary);
            border-radius: var(--radius);
            padding: 4px;
            margin-bottom: var(--space-xl);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-sm);
        }

        .mode-option {
            flex: 1;
            padding: var(--space-md);
            border: none;
            border-radius: calc(var(--radius) - 4px);
            background: transparent;
            cursor: pointer;
            transition: var(--transition);
            font-weight: 600;
            color: var(--text-secondary);
            position: relative;
            overflow: hidden;
        }

        .mode-option::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            transition: var(--transition);
        }

        .mode-option:hover::before {
            left: 100%;
        }

        .mode-option.active {
            background: linear-gradient(135deg, var(--sleep-primary), var(--sleep-secondary));
            color: white;
            box-shadow: var(--shadow-md);
            transform: translateY(-1px);
        }

        .mode-option:hover:not(.active) {
            background: rgba(76, 29, 149, 0.1);
            color: var(--sleep-primary);
        }

        /* Time Input Enhancement */
        .time-input-group {
            position: relative;
        }

        .time-input {
            font-size: 2rem;
            font-weight: 600;
            text-align: center;
            color: var(--sleep-primary);
            padding: var(--space-lg);
            border: 3px solid var(--sleep-accent);
            border-radius: var(--radius-lg);
            background: linear-gradient(145deg, var(--bg-primary), var(--moonlight));
        }

        .time-input:focus {
            border-color: var(--sleep-primary);
            box-shadow: 0 0 0 4px rgba(76, 29, 149, 0.1);
        }

        /* Sleep Duration Slider */
        .duration-slider {
            margin: var(--space-lg) 0;
        }

        .range-input {
            -webkit-appearance: none;
            width: 100%;
            height: 8px;
            border-radius: 4px;
            background: linear-gradient(to right, var(--light-sleep) 0%, var(--deep-sleep) 50%, var(--rem-sleep) 100%);
            outline: none;
            margin: var(--space-md) 0;
        }

        .range-input::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background: var(--sleep-primary);
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(76, 29, 149, 0.3);
            transition: var(--transition);
        }

        .range-input::-webkit-slider-thumb:hover {
            transform: scale(1.2);
            box-shadow: 0 6px 12px rgba(76, 29, 149, 0.4);
        }

        .range-input::-moz-range-thumb {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background: var(--sleep-primary);
            cursor: pointer;
            border: none;
            box-shadow: 0 4px 8px rgba(76, 29, 149, 0.3);
        }

        .range-display {
            display: flex;
            justify-content: space-between;
            font-size: 0.875rem;
            color: var(--text-secondary);
            margin-top: var(--space-sm);
        }

        .range-value {
            font-weight: 600;
            color: var(--sleep-primary);
            font-size: 1.125rem;
        }

        /* Action Buttons */
        .action-buttons {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
            gap: var(--space-md);
            margin-top: var(--space-lg);
        }

        .btn {
            padding: var(--space-md) var(--space-lg);
            border: none;
            border-radius: var(--radius);
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: var(--space-sm);
            font-size: 0.875rem;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transition: all 0.5s ease;
            transform: translate(-50%, -50%);
        }

        .btn:hover::before {
            width: 300px;
            height: 300px;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--sleep-primary), var(--sleep-secondary));
            color: white;
            box-shadow: var(--shadow-md);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .btn-secondary {
            background: var(--bg-secondary);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
        }

        .btn-secondary:hover {
            background: rgba(76, 29, 149, 0.1);
            border-color: var(--sleep-primary);
        }

        /* Results Display */
        .results-panel {
            background: linear-gradient(145deg, var(--bg-secondary), var(--moonlight));
            border: 3px solid var(--sleep-primary);
            border-radius: var(--radius-lg);
            padding: var(--space-2xl);
            margin: var(--space-lg) 0;
            position: relative;
            overflow: hidden;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.6s ease;
        }

        .results-panel.show {
            opacity: 1;
            transform: translateY(0);
        }

        .results-panel::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at center, rgba(76, 29, 149, 0.05) 0%, transparent 70%);
            pointer-events: none;
        }

        /* Sleep Time Options */
        .sleep-options {
            display: grid;
            gap: var(--space-md);
            margin: var(--space-xl) 0;
        }

        .sleep-option {
            background: var(--surface-elevated);
            border: 2px solid var(--border-color);
            border-radius: var(--radius-lg);
            padding: var(--space-lg);
            transition: var(--transition);
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .sleep-option::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: var(--light-sleep);
            transition: var(--transition);
        }

        .sleep-option.recommended {
            border-color: var(--recovery-green);
            background: rgba(16, 185, 129, 0.05);
        }

        .sleep-option.recommended::before {
            background: var(--recovery-green);
            width: 8px;
        }

        .sleep-option.recommended::after {
            content: '⭐ RECOMMENDED';
            position: absolute;
            top: var(--space-sm);
            right: var(--space-sm);
            background: var(--recovery-green);
            color: white;
            padding: var(--space-xs) var(--space-sm);
            border-radius: var(--radius-sm);
            font-size: 0.75rem;
            font-weight: 600;
        }

        .sleep-option:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
            border-color: var(--sleep-primary);
        }

        .sleep-time {
            font-size: 2rem;
            font-weight: 800;
            color: var(--sleep-primary);
            margin-bottom: var(--space-xs);
        }

        .sleep-label {
            font-size: 1rem;
            color: var(--text-secondary);
            margin-bottom: var(--space-sm);
        }

        .sleep-details {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.875rem;
            color: var(--text-secondary);
        }

        .cycles-info {
            display: flex;
            align-items: center;
            gap: var(--space-xs);
        }

        .quality-indicator {
            display: flex;
            align-items: center;
            gap: var(--space-xs);
            padding: var(--space-xs) var(--space-sm);
            background: rgba(76, 29, 149, 0.1);
            border-radius: var(--radius-sm);
            font-weight: 600;
            color: var(--sleep-primary);
        }

        /* Sleep Quality Visualization */
        .quality-chart {
            background: var(--surface-elevated);
            border-radius: var(--radius-lg);
            padding: var(--space-xl);
            margin: var(--space-lg) 0;
            border: 1px solid var(--border-color);
        }

        .quality-bars {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
            gap: var(--space-md);
            margin-top: var(--space-lg);
        }

        .quality-bar {
            text-align: center;
        }

        .quality-meter {
            height: 100px;
            width: 20px;
            background: rgba(76, 29, 149, 0.1);
            border-radius: 10px;
            margin: 0 auto var(--space-sm);
            position: relative;
            overflow: hidden;
        }

        .quality-fill {
            position: absolute;
            bottom: 0;
            width: 100%;
            background: linear-gradient(to top, var(--deep-sleep), var(--rem-sleep));
            border-radius: 10px;
            transition: height 1.5s ease-out;
        }

        .quality-label {
            font-size: 0.75rem;
            font-weight: 600;
            color: var(--text-secondary);
        }

        /* Sleep Tips */
        .sleep-tips {
            background: linear-gradient(135deg, var(--recovery-green), var(--sleep-accent));
            color: white;
            border-radius: var(--radius-lg);
            padding: var(--space-xl);
            margin: var(--space-lg) 0;
            position: relative;
            overflow: hidden;
        }

        .sleep-tips::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            animation: tip-shine 3s linear infinite;
        }

        @keyframes tip-shine {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .tip-title {
            font-size: 1.25rem;
            font-weight: 700;
            margin-bottom: var(--space-md);
            position: relative;
            z-index: 1;
        }

        .tip-list {
            list-style: none;
            position: relative;
            z-index: 1;
        }

        .tip-item {
            padding: var(--space-sm) 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            display: flex;
            align-items: flex-start;
            gap: var(--space-sm);
        }

        .tip-item:last-child {
            border-bottom: none;
        }

        .tip-icon {
            font-size: 1.125rem;
            margin-top: 2px;
        }

        .tip-text {
            font-size: 0.875rem;
            line-height: 1.5;
        }

        .tip-item:last-child {
            border-bottom: none;
        }

        .tip-icon {
            font-size: 1.125rem;
            margin-top: 2px;
        }

        .tip-text {
            font-size: 0.875rem;
            line-height: 1.5;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .calculator-layout {
                grid-template-columns: 1fr;
                gap: var(--space-xl);
            }

            .info-grid {
                grid-template-columns: 1fr;
            }

            .cycle-chart {
                grid-template-columns: repeat(2, 1fr);
            }

            .sleep-legend {
                grid-template-columns: 1fr;
            }

            .quality-bars {
                grid-template-columns: repeat(3, 1fr);
            }

            .hero {
                padding: var(--space-2xl) var(--space-lg);
            }

            .educational-section {
                margin-left: 0;
                margin-right: 0;
                border-radius: 0;
            }

            .action-buttons {
                grid-template-columns: 1fr;
            }

            .sleep-time {
                font-size: 1.5rem;
            }

        /* Animation Classes */
        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .pulse-glow {
            animation: pulse-glow 2s infinite;
        }

        @keyframes pulse-glow {
            0%, 100% { 
                box-shadow: var(--shadow-md);
                transform: scale(1);
            }
            50% { 
                box-shadow: 0 0 20px rgba(76, 29, 149, 0.4);
                transform: scale(1.02);
            }

        /* Clock Animation */
        .clock-animation {
            position: relative;
            width: 60px;
            height: 60px;
            border: 3px solid var(--sleep-primary);
            border-radius: 50%;
            margin: 0 auto var(--space-md);
        }

        .clock-hand {
            position: absolute;
            background: var(--sleep-primary);
            transform-origin: bottom center;
            border-radius: 2px;
        }

        .hour-hand {
            width: 3px;
            height: 20px;
            top: 10px;
            left: 50%;
            margin-left: -1.5px;
            animation: rotate-hour 43200s linear infinite;
        }

        .minute-hand {
            width: 2px;
            height: 25px;
            top: 5px;
            left: 50%;
            margin-left: -1px;
            animation: rotate-minute 3600s linear infinite;
        }

        @keyframes rotate-hour {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        @keyframes rotate-minute {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
    </style>
    <link rel="stylesheet" href="../../common/footer/premium-footer.css">
    <script src="../../common/footer/premium-footer.js"></script>
</head>
<body x-data="sleepOptimizer()">
    <!-- Enhanced Navigation Bar -->
    <nav class="main-nav">
        <div class="nav-container">
            <div class="nav-logo">
                <a href="../../index.html">🧮 Docket One</a>
            </div>
            <div class="nav-search">
                <input type="text" id="calc-search" placeholder="Search calculators..." class="search-input" aria-label="Search calculators">
                <div id="search-results" class="search-results"></div>
            </div>
            <ul class="nav-links">
                <li><a href="../BigKidMath/index.html" class="category-main-link">Big Kid Math</a></li>
                <li><a href="../CipherLab/index.html" class="category-main-link">Cipher Lab</a></li>
                <li><a href="../GeekGalaxy/index.html" class="category-main-link">Geek Galaxy</a></li>
                <li><a href="../LifeHacks/index.html" class="category-main-link">Life Hacks</a></li>
                <li><a href="../Math_Magik/index.html" class="category-main-link">Math Magik</a></li>
                <li><a href="../Otaku_Ops/index.html" class="category-main-link">Otaku Ops</a></li>
                <li><a href="../../index.html" class="home-link">Unit Converter</a></li>
            </ul>
            <button class="mobile-menu-btn" aria-label="Toggle menu">
                <span></span>
                <span></span>
                <span></span>
            </button>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-badge">
            <span>🧠</span>
            <span>Sleep Science</span>
        </div>
        <h1 class="hero-title">Sleep Cycle Optimizer</h1>
        <p class="hero-subtitle">
            Wake up refreshed every day with scientifically optimized sleep timing! Calculate perfect bedtimes and wake-up times using natural 90-minute sleep cycles for maximum energy and mental clarity.
        </p>
        <div class="difficulty-badge">
            <span>💤</span>
            <span>Science-Based</span>
        </div>
    </section>

    <div class="container">
        <!-- Educational Section -->
        <section class="educational-section">
            <h2 class="section-title">
                <span>🌙</span>
                <span>The Science of Sleep Cycles</span>
            </h2>
            
            <div class="info-grid">
                <div class="info-card">
                    <div class="info-card-icon">⏰</div>
                    <div class="info-card-title">90-Minute Cycles</div>
                    <div class="info-card-text">Sleep progresses through 4-6 recurring 90-minute cycles, each containing light sleep, deep sleep, and REM stages with unique benefits.</div>
                </div>
                <div class="info-card">
                    <div class="info-card-icon">🧠</div>
                    <div class="info-card-title">Optimal Wake Times</div>
                    <div class="info-card-text">Waking at the end of a complete cycle (during light sleep) prevents grogginess and helps you feel naturally refreshed.</div>
                </div>
                <div class="info-card">
                    <div class="info-card-icon">⚡</div>
                    <div class="info-card-title">Energy Optimization</div>
                    <div class="info-card-text">Proper sleep timing can increase daytime energy, improve focus, boost immunity, and enhance overall cognitive performance.</div>
                </div>
            </div>
            
            <p style="font-size: 1.125rem; line-height: 1.7; color: var(--text-secondary); text-align: center; max-width: 800px; margin: 0 auto;">
                This calculator uses circadian rhythm science to optimize your sleep schedule. 
                <strong style="color: var(--sleep-primary);">Wake up at the right moment in your sleep cycle for natural, energized mornings!</strong> 🌅
            </p>
        </section>

        <!-- Sleep Cycle Visualization -->
        <section class="cycle-visualization">
            <h3 style="text-align: center; margin-bottom: var(--space-lg); font-size: 1.5rem; font-weight: 700;">
                🌙 Your Sleep Journey: 5 Complete Cycles
            </h3>
            
            <div class="cycle-chart">
                <template x-for="cycle in 5" :key="cycle">
                    <div class="cycle-block" @click="highlightCycle(cycle)">
                        <div class="cycle-number" x-text="'Cycle ' + cycle"></div>
                        <div class="cycle-stages">
                            <div class="stage-light"></div>
                            <div class="stage-deep" :style="{ flex: cycle <= 2 ? 2 : 1 }"></div>
                            <div class="stage-rem" :style="{ flex: cycle >= 4 ? 2 : 1 }"></div>
                        </div>
                        <div class="cycle-time">90 min</div>
                    </div>
                </template>
            </div>
            
            <div class="sleep-legend">
                <div class="legend-item">
                    <div class="legend-color" style="background: var(--light-sleep);"></div>
                    <span>Light Sleep - Transition & Recovery</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background: var(--deep-sleep);"></div>
                    <span>Deep Sleep - Physical Restoration</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background: var(--rem-sleep);"></div>
                    <span>REM Sleep - Mental Processing</span>
                </div>
            </div>
        </section>

        <!-- Calculator Layout -->
        <div class="calculator-layout">
            <!-- Input Panel -->
            <div class="calculator-panel">
                <h2 class="panel-title">
                    <span>⚙️</span>
                    <span>Sleep Schedule Settings</span>
                </h2>

                <!-- Mode Toggle -->
                <div class="mode-toggle">
                    <button 
                        class="mode-option"
                        :class="{ active: mode === 'bedtime' }"
                        @click="mode = 'bedtime'; calculateSleepTimes()"
                    >
                        🛏️ Calculate Bedtime
                    </button>
                    <button 
                        class="mode-option"
                        :class="{ active: mode === 'wakeup' }"
                        @click="mode = 'wakeup'; calculateSleepTimes()"
                    >
                        ⏰ Calculate Wake Time
                    </button>
                </div>

                <!-- Target Time Input -->
                <div class="input-group">
                    <label class="input-label" x-text="mode === 'bedtime' ? 'Desired Wake-Up Time' : 'Planned Bedtime'"></label>
                    <div class="time-input-group">
                        <input 
                            type="time" 
                            x-model="targetTime"
                            class="input-field time-input"
                            @change="calculateSleepTimes()"
                        >
                    </div>
                </div>

                <!-- Sleep Quality Factors -->
                <div class="input-group">
                    <label class="input-label">Time to Fall Asleep</label>
                    <input 
                        type="range" 
                        x-model="fallAsleepTime" 
                        min="5" 
                        max="60" 
                        class="range-input"
                        @input="calculateSleepTimes()"
                    >
                    <div class="range-display">
                        <span>5 min</span>
                        <span class="range-value" x-text="fallAsleepTime + ' minutes'"></span>
                        <span>60 min</span>
                    </div>
                </div>

                <!-- Sleep Environment -->
                <div class="input-group">
                    <label class="input-label">Sleep Environment Quality</label>
                    <input 
                        type="range" 
                        x-model="environmentQuality" 
                        min="1" 
                        max="10" 
                        class="range-input"
                        @input="calculateSleepTimes()"
                    >
                    <div class="range-display">
                        <span>😵 Poor</span>
                        <span class="range-value" x-text="environmentQuality + '/10'"></span>
                        <span>😴 Perfect</span>
                    </div>
                </div>

                <!-- Age Factor -->
                <div class="input-group">
                    <label class="input-label">Age Group (affects sleep needs)</label>
                    <select x-model="ageGroup" @change="calculateSleepTimes()" class="input-field">
                        <option value="teen">Teen (14-17 years)</option>
                        <option value="young">Young Adult (18-25 years)</option>
                        <option value="adult">Adult (26-64 years)</option>
                        <option value="senior">Senior (65+ years)</option>
                    </select>
                </div>

                <!-- Action Buttons -->
                <div class="action-buttons">
                    <button @click="calculateSleepTimes()" class="btn btn-primary">
                        🧮 Optimize Sleep
                    </button>
                    <button @click="setCurrentTime()" class="btn btn-secondary">
                        🕐 Use Current Time
                    </button>
                    <button @click="reset()" class="btn btn-secondary">
                        🔄 Reset
                    </button>
                </div>
            </div>

            <!-- Results Panel -->
            <div class="calculator-panel">
                <h2 class="panel-title">
                    <span>✨</span>
                    <span>Your Optimized Sleep Schedule</span>
                </h2>

                <!-- Sleep Options -->
                <div x-show="resultsCalculated" class="results-panel show">
                    <div class="sleep-options">
                        <template x-for="(option, index) in sleepOptions" :key="index">
                            <div 
                                class="sleep-option"
                                :class="{ recommended: option.recommended }"
                                @click="selectOption(option)"
                            >
                                <div class="sleep-time" x-text="option.time"></div>
                                <div class="sleep-label" x-text="option.label"></div>
                                <div class="sleep-details">
                                    <div class="cycles-info">
                                        <span x-text="option.cycles + ' cycles'"></span>
                                        <span>•</span>
                                        <span x-text="option.duration"></span>
                                    </div>
                                    <div class="quality-indicator">
                                        <span x-text="option.quality"></span>
                                        <span x-text="option.qualityIcon"></span>
                                    </div>
                                </div>
                            </div>
                        </template>
                    </div>

                    <!-- Sleep Quality Chart -->
                    <div class="quality-chart">
                        <h4 style="text-align: center; margin-bottom: var(--space-md); color: var(--sleep-primary);">
                            Sleep Quality Factors
                        </h4>
                        <div class="quality-bars">
                            <div class="quality-bar">
                                <div class="quality-meter">
                                    <div class="quality-fill" :style="`height: ${Math.min(fallAsleepTime <= 15 ? 90 : 60, 100)}%`"></div>
                                </div>
                                <div class="quality-label">Sleep Onset</div>
                            </div>
                            <div class="quality-bar">
                                <div class="quality-meter">
                                    <div class="quality-fill" :style="`height: ${environmentQuality * 10}%`"></div>
                                </div>
                                <div class="quality-label">Environment</div>
                            </div>
                            <div class="quality-bar">
                                <div class="quality-meter">
                                    <div class="quality-fill" :style="`height: ${getAgeQualityScore()}%`"></div>
                                </div>
                                <div class="quality-label">Age Factor</div>
                            </div>
                            <div class="quality-bar">
                                <div class="quality-meter">
                                    <div class="quality-fill" :style="`height: ${getOverallQuality()}%`"></div>
                                </div>
                                <div class="quality-label">Overall</div>
                            </div>
                        </div>
                    </div>

                    <!-- Personalized Sleep Tips -->
                    <div class="sleep-tips">
                        <div class="tip-title">💡 Personalized Sleep Tips</div>
                        <ul class="tip-list">
                            <template x-for="tip in getPersonalizedTips()" :key="tip">
                                <li class="tip-item">
                                    <span class="tip-icon">✨</span>
                                    <span class="tip-text" x-text="tip"></span>
                                </li>
                            </template>
                        </ul>
                    </div>
                </div>

                <!-- Initial State -->
                <div x-show="!resultsCalculated" style="text-align: center; padding: var(--space-3xl); color: var(--text-secondary);">
                    <div class="clock-animation">
                        <div class="clock-hand hour-hand"></div>
                        <div class="clock-hand minute-hand"></div>
                    </div>
                    <h3>Ready to Optimize Your Sleep?</h3>
                    <p>Set your preferences above to get personalized sleep timing recommendations!</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        function sleepOptimizer() {
            return {
                // State
                mode: 'bedtime',
                targetTime: '07:00',
                fallAsleepTime: 15,
                environmentQuality: 7,
                ageGroup: 'adult',
                resultsCalculated: false,
                sleepOptions: [],
                selectedOption: null,

                // Age-based sleep requirements
                ageRequirements: {
                    teen: { min: 8, max: 10, optimal: 9 },
                    young: { min: 7, max: 9, optimal: 8 },
                    adult: { min: 7, max: 9, optimal: 7.5 },
                    senior: { min: 7, max: 8, optimal: 7.5 }
                },

                init() {
                    this.setCurrentTime();
                    this.calculateSleepTimes();
                },

                setCurrentTime() {
                    const now = new Date();
                    if (this.mode === 'bedtime') {
                        // Set wake time to 8 hours from now
                        const wakeTime = new Date(now.getTime() + 8 * 60 * 60 * 1000);
                        this.targetTime = this.formatTimeInput(wakeTime);
                    } else {
                        // Set bedtime to current time
                        this.targetTime = this.formatTimeInput(now);
                    }
                    this.calculateSleepTimes();
                },

                calculateSleepTimes() {
                    if (!this.targetTime) return;

                    const cycleLength = 90; // minutes
                    const baseTime = this.parseTime(this.targetTime);
                    const options = [];

                    // Calculate for 3-6 cycles (4.5-9 hours)
                    for (let cycles = 3; cycles <= 6; cycles++) {
                        const totalSleepMinutes = cycles * cycleLength;
                        const totalTimeWithFallAsleep = totalSleepMinutes + parseInt(this.fallAsleepTime);
                        
                        let calculatedTime;
                        if (this.mode === 'bedtime') {
                            // Calculate bedtime (subtract sleep time from wake time)
                            calculatedTime = new Date(baseTime.getTime() - totalTimeWithFallAsleep * 60000);
                        } else {
                            // Calculate wake time (add sleep time to bedtime)
                            calculatedTime = new Date(baseTime.getTime() + totalTimeWithFallAsleep * 60000);
                        }

                        const hours = totalSleepMinutes / 60;
                        const quality = this.calculateSleepQuality(cycles, hours);
                        const isRecommended = this.isRecommendedDuration(hours);

                        options.push({
                            time: this.formatTime(calculatedTime),
                            label: this.mode === 'bedtime' ? 'Go to bed at' : 'Wake up at',
                            cycles: cycles,
                            duration: this.formatDuration(hours),
                            quality: quality.label,
                            qualityIcon: quality.icon,
                            qualityScore: quality.score,
                            recommended: isRecommended,
                            totalMinutes: totalSleepMinutes,
                            fallAsleepAdjusted: totalTimeWithFallAsleep
                        });
                    }

                    this.sleepOptions = options;
                    this.resultsCalculated = true;
                },

                calculateSleepQuality(cycles, hours) {
                    const ageReq = this.ageRequirements[this.ageGroup];
                    const environmentFactor = this.environmentQuality / 10;
                    const fallAsleepFactor = this.fallAsleepTime <= 20 ? 1 : 0.8;
                    
                    let durationScore = 0;
                    if (hours >= ageReq.min && hours <= ageReq.max) {
                        durationScore = 1;
                    } else if (hours < ageReq.min) {
                        durationScore = Math.max(0.3, hours / ageReq.min);
                    } else {
                        durationScore = Math.max(0.5, ageReq.max / hours);
                    }

                    const totalScore = (durationScore * 0.5 + environmentFactor * 0.3 + fallAsleepFactor * 0.2) * 100;

                    if (totalScore >= 85) return { label: 'Excellent', icon: '🌟', score: totalScore };
                    if (totalScore >= 70) return { label: 'Good', icon: '😴', score: totalScore };
                    if (totalScore >= 55) return { label: 'Fair', icon: '😐', score: totalScore };
                    return { label: 'Poor', icon: '😵', score: totalScore };
                },

                isRecommendedDuration(hours) {
                    const ageReq = this.ageRequirements[this.ageGroup];
                    return Math.abs(hours - ageReq.optimal) <= 0.5;
                },

                formatDuration(hours) {
                    const h = Math.floor(hours);
                    const m = Math.round((hours - h) * 60);
                    return m === 0 ? `${h}h` : `${h}h ${m}m`;
                },

                getAgeQualityScore() {
                    const scores = { teen: 75, young: 85, adult: 80, senior: 70 };
                    return scores[this.ageGroup] || 80;
                },

                getOverallQuality() {
                    const environmentScore = this.environmentQuality * 10;
                    const fallAsleepScore = this.fallAsleepTime <= 15 ? 90 : 60;
                    const ageScore = this.getAgeQualityScore();
                    
                    return Math.round((environmentScore + fallAsleepScore + ageScore) / 3);
                },

                getPersonalizedTips() {
                    const tips = [];
                    
                    if (this.fallAsleepTime > 20) {
                        tips.push('Try a relaxing bedtime routine 30 minutes before sleep to reduce fall-asleep time');
                        tips.push('Consider avoiding screens 1 hour before bedtime to improve sleep onset');
                    }
                    
                    if (this.environmentQuality < 7) {
                        tips.push('Optimize your sleep environment: cool temperature (60-67°F), dark room, minimal noise');
                        tips.push('Consider blackout curtains, white noise machine, or comfortable mattress upgrades');
                    }
                    
                    if (this.ageGroup === 'teen') {
                        tips.push('Teens naturally have later sleep cycles - try to maintain consistent sleep schedule even on weekends');
                    } else if (this.ageGroup === 'senior') {
                        tips.push('Seniors often benefit from earlier bedtimes and may need short afternoon naps');
                    }
                    
                    // Add general tips
                    tips.push('Expose yourself to bright light in the morning to regulate your circadian rhythm');
                    tips.push('Avoid caffeine 6+ hours before bedtime and heavy meals 3+ hours before sleep');
                    
                    // Activity-based tips
                    if (this.getOverallQuality() < 70) {
                        tips.push('Consider gentle evening exercise (yoga, stretching) to improve sleep quality');
                        tips.push('Try meditation or deep breathing exercises to reduce sleep anxiety');
                    }
                    
                    return tips.slice(0, 4); // Return max 4 tips
                },

                selectOption(option) {
                    this.selectedOption = option;
                    // Visual feedback
                    const selectedElements = document.querySelectorAll('.sleep-option');
                    selectedElements.forEach(el => el.classList.remove('pulse-glow'));
                    
                    setTimeout(() => {
                        const selectedElement = Array.from(selectedElements).find(el => 
                            el.querySelector('.sleep-time').textContent === option.time
                        );
                        if (selectedElement) {
                            selectedElement.classList.add('pulse-glow');
                        }
                    }, 100);
                },

                highlightCycle(cycleNumber) {
                    // Add visual feedback for cycle selection
                    console.log(`Highlighting cycle ${cycleNumber}`);
                },

                reset() {
                    this.mode = 'bedtime';
                    this.fallAsleepTime = 15;
                    this.environmentQuality = 7;
                    this.ageGroup = 'adult';
                    this.resultsCalculated = false;
                    this.selectedOption = null;
                    this.setCurrentTime();
                },

                // Utility Functions
                parseTime(timeString) {
                    const today = new Date();
                    const [hours, minutes] = timeString.split(':').map(Number);
                    return new Date(today.getFullYear(), today.getMonth(), today.getDate(), hours, minutes);
                },

                formatTime(date) {
                    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });
                },

                formatTimeInput(date) {
                    const hours = date.getHours().toString().padStart(2, '0');
                    const minutes = date.getMinutes().toString().padStart(2, '0');
                    return `${hours}:${minutes}`;
                }
            }
        }

        // Enhanced Mobile Menu
        document.addEventListener('DOMContentLoaded', function() {
            const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
            const navLinks = document.querySelector('.nav-links');
            
            if (mobileMenuBtn && navLinks) {
                mobileMenuBtn.addEventListener('click', function() {
                    mobileMenuBtn.classList.toggle('active');
                    navLinks.classList.toggle('active');
                    document.body.classList.toggle('menu-open');
                });
                
                // Close menu when clicking outside
                document.addEventListener('click', function(e) {
                    if (!e.target.closest('.nav-container')) {
                        mobileMenuBtn.classList.remove('active');
                        navLinks.classList.remove('active');
                        document.body.classList.remove('menu-open');
                    }
                });
                
                // Close menu when clicking a link
                navLinks.addEventListener('click', function() {
                    mobileMenuBtn.classList.remove('active');
                    navLinks.classList.remove('active');
                    document.body.classList.remove('menu-open');
                });
            }
        });
    </script>

    <!-- Newsletter Bar -->
<!-- Newsletter Bar - Include before footer -->
<div class="newsletter-bar" x-data="newsletterForm()">
    <div class="newsletter-container">
        <div class="newsletter-content">
            <div class="newsletter-info">
                <h3>ðŸŽ‰ Join Our Calculator Community!</h3>
                <p>Get updates on new fun calculators and practical tools</p>
            </div>
            <form class="newsletter-form" @submit.prevent="submitNewsletter()" x-show="!showSuccess">
                <input 
                    type="email" 
                    class="newsletter-input"
                    placeholder="Enter your email for calculator updates"
                    x-model="email"
                    required
                >
                <button 
                    type="submit" 
                    class="newsletter-submit"
                    :disabled="isSubmitting"
                >
                    <span x-show="isSubmitting" class="loading-spinner"></span>
                    <span x-text="isSubmitting ? 'Subscribing...' : 'ðŸš€ Subscribe'"></span>
                </button>
            </form>
            <div x-show="showSuccess" class="newsletter-success" style="display: none;">
                <p style="color: var(--accent-light); font-weight: 600;">
                    âœ… Awesome! You'll get updates on the coolest new calculators!
                </p>
            </div>
        </div>
    </div>
</div>


    <!-- Footer -->
<!-- Main Footer - Include at bottom of every page -->
<footer class="footer">
    <div class="footer-container">
        <div class="footer-content">
            <div class="footer-section">
                <h4>ðŸŽ¯ About Docket.One</h4>
                <p>Making life easier (and more fun) with calculators that actually matter. From figuring out if you should buy a car or just Uber everywhere, to calculating your caffeine half-life, we've got the tools for modern life.</p>
                <p>Practical meets playful. Because adulting is hard enough.</p>
            </div>

            <div class="footer-section">
                <h4>ðŸŽª Calculator Categories</h4>
                <ul class="footer-links">
                    <li><a href="/pages/BigKidMath/"><span class="calculator-emoji">ðŸ§®</span> BigKidMath - Adult Life Tools</a></li>
                    <li><a href="/pages/CipherLab/"><span class="calculator-emoji">ðŸ”</span> CipherLab - Secret Codes & Security</a></li>
                    <li><a href="/pages/GeekGalaxy/"><span class="calculator-emoji">ðŸš€</span> GeekGalaxy - Sci-Fi & Fantasy Fun</a></li>
                    <li><a href="/pages/LifeHacks/"><span class="calculator-emoji">âš¡</span> LifeHacks - Productivity & Wellness</a></li>
                    <li><a href="/pages/Math_Magik/"><span class="calculator-emoji">ðŸŽ­</span> Math Magik - Mathematical Wizardry</a></li>
                    <li><a href="/pages/Otaku_Ops/"><span class="calculator-emoji">ðŸŽŒ</span> Otaku Ops - Anime & Culture</a></li>
                </ul>
            </div>

            <div class="footer-section">
                <h4>ðŸ’¬ Support & Info</h4>
                <ul class="footer-links">
                    <li><a href="/help"><span class="calculator-emoji">â“</span> Help & FAQ</a></li>
                    <li><a href="/privacy"><span class="calculator-emoji">ðŸ”’</span> Privacy Policy</a></li>
                    <li><a href="/terms"><span class="calculator-emoji">ðŸ“‹</span> Terms of Service</a></li>
                    <li><a href="/accessibility"><span class="calculator-emoji">â™¿</span> Accessibility</a></li>
                    <li><a href="/contact"><span class="calculator-emoji">ðŸ“§</span> Contact Us</a></li>
                </ul>
            </div>

            <div class="footer-section">
                <button 
                    class="request-calculator-btn"
                    @click="showModal = true"
                >
                    ðŸ’¡ Request a Calculator
                </button>
            </div>
        </div>

        <div class="footer-bottom">
            <div class="footer-logo">ðŸ§® Docket.One</div>
            <div class="footer-copyright">
                Â© 2025 Docket.One. All rights reserved. Making calculations fun since... well, recently!
            </div>
            <div class="social-links">
                <a href="#" class="social-link" aria-label="Twitter">ð•</a>
                <a href="#" class="social-link" aria-label="LinkedIn">ðŸ’¼</a>
                <a href="#" class="social-link" aria-label="GitHub">ðŸ™</a>
                <a href="#" class="social-link" aria-label="Email">ðŸ“§</a>
            </div>
        </div>
    </div>
</footer>


    <!-- Request Modal -->
<!-- Calculator Request Modal - Include once per page (usually at end of body) -->
<div 
    x-data="calculatorRequestForm()"
    x-show="showModal"
    x-cloak
    class="modal-overlay"
    @click.self="closeModal()"
    style="display: none;"
>
    <div class="modal-content">
        <!-- Request Form -->
        <div x-show="!showConfirmation">
            <div class="modal-header">
                <h2 class="modal-title">ðŸ’¡ Request a Fun Calculator</h2>
                <p class="modal-subtitle">Got an idea for a calculator that would make life easier or more fun? We want to hear it!</p>
                <button class="modal-close" @click="closeModal()">âœ•</button>
            </div>

            <div class="modal-body">
                <form @submit.prevent="submitRequest()">
                    <div class="form-group">
                        <label class="form-label" for="userName">Your Name *</label>
                        <input 
                            type="text" 
                            id="userName"
                            class="form-input"
                            x-model="formData.name"
                            required
                            placeholder="What should we call you?"
                        >
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="userEmail">Email Address *</label>
                        <input 
                            type="email" 
                            id="userEmail"
                            class="form-input"
                            x-model="formData.email"
                            required
                            placeholder="your@email.com"
                        >
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="requestType">What Kind of Request? *</label>
                        <select 
                            id="requestType"
                            class="form-input form-select"
                            x-model="formData.type"
                            required
                        >
                            <option value="">Choose your request type</option>
                            <option value="new-calculator">ðŸ†• Brand New Calculator</option>
                            <option value="enhancement">âš¡ Improve Existing Calculator</option>
                            <option value="category">ðŸŽª New Category Idea</option>
                            <option value="feature">âœ¨ Cool New Feature</option>
                            <option value="other">ðŸ¤” Something Else Entirely</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="calculatorTitle">Calculator Name/Title *</label>
                        <input 
                            type="text" 
                            id="calculatorTitle"
                            class="form-input"
                            x-model="formData.title"
                            required
                            placeholder="e.g., 'Should I Call In Sick Calculator', 'Pizza vs Ramen Budget Optimizer'"
                        >
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="description">Tell Us About Your Idea! *</label>
                        <textarea 
                            id="description"
                            class="form-input form-textarea"
                            x-model="formData.description"
                            required
                            placeholder="Describe your calculator idea! What would it calculate? What inputs would users enter? What would be the fun/practical output? Be as creative as you want - the weirder, the better!"
                        ></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="category">Which Category Fits Best?</label>
                        <select 
                            id="category"
                            class="form-input form-select"
                            x-model="formData.category"
                        >
                            <option value="">Pick a category (or suggest a new one!)</option>
                            <option value="BigKidMath">ðŸ§® BigKidMath - Adult Life Decisions</option>
                            <option value="CipherLab">ðŸ” CipherLab - Codes & Security</option>
                            <option value="GeekGalaxy">ðŸš€ GeekGalaxy - Sci-Fi & Fantasy</option>
                            <option value="LifeHacks">âš¡ LifeHacks - Productivity & Wellness</option>
                            <option value="Math_Magik">ðŸŽ­ Math Magik - Mathematical Magic</option>
                            <option value="Otaku_Ops">ðŸŽŒ Otaku Ops - Anime & Pop Culture</option>
                            <option value="new-category">ðŸ†• I have a new category idea!</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="priority">How Much Do You Want This?</label>
                        <select 
                            id="priority"
                            class="form-input form-select"
                            x-model="formData.priority"
                        >
                            <option value="low">ðŸ˜Š Would be nice to have</option>
                            <option value="medium">ðŸ˜ Really want this!</option>
                            <option value="high">ðŸ¤© NEED this in my life!</option>
                            <option value="urgent">ðŸš¨ My life depends on it!</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="useCase">Why Would This Be Awesome?</label>
                        <textarea 
                            id="useCase"
                            class="form-input form-textarea"
                            x-model="formData.useCase"
                            placeholder="Tell us your story! Are you a student trying to optimize study time? A professional making tough decisions? Someone who just thinks it would be hilarious? We love hearing why calculators matter to you!"
                        ></textarea>
                    </div>

                    <div class="form-actions">
                        <button 
                            type="button" 
                            class="btn btn-secondary"
                            @click="closeModal()"
                        >
                            Maybe Later
                        </button>
                        <button 
                            type="submit" 
                            class="btn btn-primary"
                            :disabled="isSubmitting"
                        >
                            <span x-show="isSubmitting" class="loading-spinner"></span>
                            <span x-text="isSubmitting ? 'Sending...' : 'ðŸš€ Send My Idea'"></span>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Confirmation Modal -->
        <div x-show="showConfirmation" class="confirmation-modal" style="display: none;">
            <div class="modal-header">
                <button class="modal-close" @click="closeModal()">âœ•</button>
            </div>
            <div class="modal-body">
                <div class="success-icon">ðŸŽ‰</div>
                <h3 class="confirmation-title">Awesome! We Got Your Idea!</h3>
                <p class="confirmation-message">
                    Thanks for sharing your calculator idea with us! We're excited to check it out and see if we can make it happen. 
                    <br><br>
                    <strong>What happens next?</strong><br>
                    â€¢ You'll get a confirmation email shortly<br>
                    â€¢ Our team will review your idea<br>
                    â€¢ If we build it, you'll be the first to know!<br>
                    â€¢ We might even name you as the inspiration ðŸ˜Š
                </p>
                <button 
                    class="btn btn-primary"
                    @click="closeModal()"
                    style="width: 100%;"
                >
                    ðŸŽ¯ Close & Keep Calculating!
                </button>
            </div>
        </div>
    </div>
</div>



<!-- Newsletter Bar -->
<div class="newsletter-bar" x-data="newsletterForm()">
    <div class="newsletter-container">
        <div class="newsletter-content">
            <div class="newsletter-info">
                <h3>&#127881; Join Our Calculator Community!</h3>
                <p>Get updates on new fun calculators and practical tools</p>
            </div>
            <form class="newsletter-form" @submit.prevent="submitNewsletter()" x-show="!showSuccess">
                <input 
                    type="email" 
                    class="newsletter-input"
                    placeholder="Enter your email for calculator updates"
                    x-model="email"
                    required
                >
                <button 
                    type="submit" 
                    class="newsletter-submit"
                    :disabled="isSubmitting"
                >
                    <span x-show="isSubmitting" class="loading-spinner"></span>
                    <span x-text="isSubmitting ? 'Subscribing...' : '&#128640; Subscribe'"></span>
                </button>
            </form>
            <div x-show="showSuccess" class="newsletter-success" style="display: none;">
                <p style="color: var(--accent-light); font-weight: 600;">
                    &#9989; Awesome! You'll get updates on the coolest new calculators!
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Footer -->
<footer class="footer">
    <div class="footer-container">
        <div class="footer-content">
            <div class="footer-section">
                <h4>&#127919; About Docket.One</h4>
                <p>Making life easier (and more fun) with calculators that actually matter. From figuring out if you should buy a car or just Uber everywhere, to calculating your caffeine half-life, we've got the tools for modern life.</p>
                <p>Practical meets playful. Because adulting is hard enough.</p>
            </div>

            <div class="footer-section">
                <h4>&#127914; Calculator Categories</h4>
                <ul class="footer-links">
                    <li><a href="/pages/BigKidMath/"><span class="calculator-emoji">&#129518;</span> BigKidMath - Adult Life Tools</a></li>
                    <li><a href="/pages/CipherLab/"><span class="calculator-emoji">&#128272;</span> CipherLab - Secret Codes & Security</a></li>
                    <li><a href="/pages/GeekGalaxy/"><span class="calculator-emoji">&#128640;</span> GeekGalaxy - Sci-Fi & Fantasy Fun</a></li>
                    <li><a href="/pages/LifeHacks/"><span class="calculator-emoji">&#9889;</span> LifeHacks - Productivity & Wellness</a></li>
                    <li><a href="/pages/Math_Magik/"><span class="calculator-emoji">&#127917;</span> Math Magik - Mathematical Wizardry</a></li>
                    <li><a href="/pages/Otaku_Ops/"><span class="calculator-emoji">&#127999;</span> Otaku Ops - Anime & Culture</a></li>
                </ul>
            </div>

            <div class="footer-section">
                <h4>&#128172; Support & Info</h4>
                <ul class="footer-links">
                    <li><a href="/help"><span class="calculator-emoji">&#10067;</span> Help & FAQ</a></li>
                    <li><a href="/privacy"><span class="calculator-emoji">&#128274;</span> Privacy Policy</a></li>
                    <li><a href="/terms"><span class="calculator-emoji">&#128203;</span> Terms of Service</a></li>
                    <li><a href="/accessibility"><span class="calculator-emoji">&#9855;</span> Accessibility</a></li>
                    <li><a href="/contact"><span class="calculator-emoji">&#128231;</span> Contact Us</a></li>
                </ul>
            </div>

            <div class="footer-section">
                <button 
                    class="request-calculator-btn"
                    @click="showModal = true"
                >
                    &#128161; Request a Calculator
                </button>
            </div>
        </div>

        <div class="footer-bottom">
            <div class="footer-logo">&#129518; Docket.One</div>
            <div class="footer-copyright">
                Â© 2025 Docket.One. All rights reserved. Making calculations fun since... well, recently!
            </div>
            <div class="social-links">
                <a href="#" class="social-link" aria-label="Twitter">&#120143;</a>
                <a href="#" class="social-link" aria-label="LinkedIn">&#128188;</a>
                <a href="#" class="social-link" aria-label="GitHub">&#128025;</a>
                <a href="#" class="social-link" aria-label="Email">&#128231;</a>
            </div>
        </div>
    </div>
</footer>

<!-- Request Modal -->
<div 
    x-data="calculatorRequestForm()"
    x-show="showModal"
    x-cloak
    class="modal-overlay"
    @click.self="closeModal()"
    style="display: none;"
>
    <div class="modal-content">
        <div x-show="!showConfirmation">
            <div class="modal-header">
                <h2 class="modal-title">&#128161; Request a Fun Calculator</h2>
                <p class="modal-subtitle">Got an idea for a calculator that would make life easier or more fun? We want to hear it!</p>
                <button class="modal-close" @click="closeModal()">&#10005;</button>
            </div>

            <div class="modal-body">
                <form @submit.prevent="submitRequest()">
                    <div class="form-group">
                        <label class="form-label" for="userName">Your Name *</label>
                        <input 
                            type="text" 
                            id="userName"
                            class="form-input"
                            x-model="formData.name"
                            required
                            placeholder="What should we call you?"
                        >
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="userEmail">Email Address *</label>
                        <input 
                            type="email" 
                            id="userEmail"
                            class="form-input"
                            x-model="formData.email"
                            required
                            placeholder="your@email.com"
                        >
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="requestType">What Kind of Request? *</label>
                        <select 
                            id="requestType"
                            class="form-input form-select"
                            x-model="formData.type"
                            required
                        >
                            <option value="">Choose your request type</option>
                            <option value="new-calculator">&#127358; Brand New Calculator</option>
                            <option value="enhancement">&#9889; Improve Existing Calculator</option>
                            <option value="category">&#127914; New Category Idea</option>
                            <option value="feature">&#10024; Cool New Feature</option>
                            <option value="other">&#129300; Something Else Entirely</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="calculatorTitle">Calculator Name/Title *</label>
                        <input 
                            type="text" 
                            id="calculatorTitle"
                            class="form-input"
                            x-model="formData.title"
                            required
                            placeholder="e.g., 'Should I Call In Sick Calculator', 'Pizza vs Ramen Budget Optimizer'"
                        >
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="description">Tell Us About Your Idea! *</label>
                        <textarea 
                            id="description"
                            class="form-input form-textarea"
                            x-model="formData.description"
                            required
                            placeholder="Describe your calculator idea! What would it calculate? What inputs would users enter? What would be the fun/practical output? Be as creative as you want - the weirder, the better!"
                        ></textarea>
                    </div>

                    <div class="form-actions">
                        <button 
                            type="button" 
                            class="btn btn-secondary"
                            @click="closeModal()"
                        >
                            Maybe Later
                        </button>
                        <button 
                            type="submit" 
                            class="btn btn-primary"
                            :disabled="isSubmitting"
                        >
                            <span x-show="isSubmitting" class="loading-spinner"></span>
                            <span x-text="isSubmitting ? 'Sending...' : '&#128640; Send My Idea'"></span>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <div x-show="showConfirmation" class="confirmation-modal" style="display: none;">
            <div class="modal-header">
                <button class="modal-close" @click="closeModal()">&#10005;</button>
            </div>
            <div class="modal-body">
                <div class="success-icon">&#127881;</div>
                <h3 class="confirmation-title">Awesome! We Got Your Idea!</h3>
                <p class="confirmation-message">
                    Thanks for sharing your calculator idea with us! We're excited to check it out and see if we can make it happen. 
                    <br><br>
                    <strong>What happens next?</strong><br>
                    â€¢ You'll get a confirmation email shortly<br>
                    â€¢ Our team will review your idea<br>
                    â€¢ If we build it, you'll be the first to know!<br>
                    â€¢ We might even name you as the inspiration &#128522;
                </p>
                <button 
                    class="btn btn-primary"
                    @click="closeModal()"
                    style="width: 100%;"
                >
                    &#127919; Close & Keep Calculating!
                </button>
            </div>
        </div>
    </div>
</div>

</body>
</html>

